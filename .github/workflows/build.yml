name: Build and Release Application

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
      # 1. Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Leer la versión desde version.txt y asignarla a la variable de entorno global
      - name: Read version
        shell: pwsh
        run: |
          $VERSION = Get-Content version.txt | ForEach-Object { $_.Trim() }
          if (-not $VERSION) {
            Write-Error "El archivo version.txt está vacío o contiene solo espacios."
          }
          Write-Host "Versión leída desde version.txt: $VERSION"
          Add-Content -Path "$env:GITHUB_ENV" -Value "VERSION=$VERSION"

      # 3. Depurar la variable VERSION
      - name: Debug exported VERSION
        shell: pwsh
        run: |
          if (-not $env:VERSION) {
            Write-Error "La variable VERSION no está definida correctamente."
          } else {
            Write-Host "La versión en el entorno global es: $env:VERSION"
          }

      # 4. Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      # 5. Instalar dependencias
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      # 6. Compilar la aplicación
      - name: Build application
        run: pyinstaller UI.spec

      # 7. Verificar que el ejecutable existe
      - name: Verify build output
        run: |
          if (!(Test-Path "dist/TFG-Gestor_de_base_de_datos.exe")) {
            Write-Error "El archivo 'dist/TFG-Gestor_de_base_de_datos.exe' no existe. Verifica que PyInstaller lo haya generado correctamente."
          } else {
            Write-Host "El archivo 'dist/TFG-Gestor_de_base_de_datos.exe' existe y está listo para subirlo."
          }

      # 8. Crear release en GitHub
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.VERSION }}
          name: TFG-Gestor de base de datos v${{ env.VERSION }}
          artifacts: dist/TFG-Gestor_de_base_de_datos.exe
          artifactPrefix: "" # Elimina prefijos o transformaciones